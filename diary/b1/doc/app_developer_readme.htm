<!DOCTYPE html>

 <html><head>
  <!-- doctype for html 4 is only to satisfy IE -->
  
  <meta name="copyright" content="2011 (c) Konstantin Kirillov">
  <meta name="description" content="Board Puzzle Framework"> 
  <meta name="keywords" content="board game, puzzle game, on line game, game development, educational game, sokoban"> 

  <title>Framework</title>
	<script type="text/javascript" src="../tp/lib/jquery-1.7.js"></script>
	<script type="text/javascript" src="../tp/bind_events.js"></script>
	<script type="text/javascript" src="../tp/core.js"></script>
	<script type="text/javascript" src="../tp/core_no_jquery.js"></script>
	<script type="text/javascript" src="../tp/core2_no_jquery.js"></script>
	<script type="text/javascript" >$.fn.tp$.core.reset_path_from_land_to_app_root('..');</script>
	<script type="text/javascript" src="../tp/gui.js"></script>
	<script type="text/javascript" src="../tp/gui_no_jq.js"></script>
	<script type="text/javascript" src="../tp/form.js"></script>

	<!-- :: must be before others in gio: -->
	<script type="text/javascript" src="../core/config/core.js"></script>
	<script type="text/javascript" src="../core/config/gui.js"></script>
	<script type="text/javascript" src="../core/config/description.js"></script>
	<script type="text/javascript" src="../core/config/spawner.js"></script>


	<script type="text/javascript" src="../core/entry.js"></script>

	<script type="text/javascript" >
		$.fn.tp$.gio.session.init.entry=function(){
			$.fn.tp$.core.rebuild_readme_html($.fn.tp$.gio.description);
		};
	</script>
	<style media="screen" rel="stylesheet" type="text/css">
		a			{	
						text-decoration:none; 
						border:none; 
					}
	</style>


</head><body><div style="color:#666666; white-space:pre; font-family:monospace;">

Readme won't display if no JavaScript language enabled in your browser.
To display a readme, turn JavaScript on.

</div>

<div style="white-space:pre; font-family:monospace; visibility:hidden;">
<pre>

<h1>Draft</h1>

You should not read but run this readme from ...play/doc/app_developer_readme.htm 

<a href="../index.htm">#@title@#</a> is a #@description@#. It is jQuery subplugin tp$.gio.
In other words, it is wrapped into a <a href="../tp/readme.htm">jQuery plugin, tp</a>.
The files are spread via <a href="../">directory tree</a>, but can be assembled in one file.

Version:				#@version@#
Date:					#@date@#
License:				#@license@#
Copyright:				#@copyright@#
Language:				#@language@#
System Requirements:	#@usage_requirements@#
WebSite:				#@web_site@#
EMail:					#@email@#




O v e r v i e w


#@title@# can be ported to database-driven site like boardspirator.com, but
this is out of scope of this project. This project is in pure JavaScript.


<a href="guest_readme.htm">Game Usage</a>
<a href="app_design_concepts.htm">Application Design Concepts</a>


#@title@# is a part of tp-package and <a href="../tp/readme.htm#features">the features and philosophy of tp</a> are applied.
   ... except images, which are used only in game boards,
   ... except css-ids in ads in some web pages




S o f t w a r e   O v e r v i e w


Play folder tree:
	core         - core source code
	def          - definitiions: games, albums, skins, ...
	tp           - generic JS libraries
	prod         - production script. Compiled from development part.
	deployer     - Ruby script which deploys application from dev. version to production.
	google_apps  - have nothing to do with application. Ignored if disabled in configuration.
	Folder/file names follow project semantics.



	
H o w    t o   r u n   o r    t o    d e b u g 

  Adding &debug parameter to URL-query enables debug mode.
  <a href="../index.htm">Entry point</a> calls <a href="../core/entry.js">entry.js</a> ...




M a i n t e n a n c e

	Keep browser detection code updated in tp.$core.



C o d i n g   c o n v e n t i o n s

	There is only one global variable jQuery and these which are injected by jQuery, possibly "$".
	No css files, *.css, used for engine. Hence, all css is in-line and dynamic.
	Attempt made to hold following convensions:
		No css class attribute ever used except one case, class="dontload_external" in derive.js
		No css id attribute ever used except for debug when id = "...._debug" and for optional debug console which has id.
	
	

A p p l i c a t i o n    A r c h i t e c t u r e

	Finally functioned at run-time album object is like:
		album
			game
			dresses
			bundle
				collections
					collection
						maps
							map
								board
								rounds
									round
										playpaths
								dresses
									merged dresses from parent album and from map-script

		Front page captions reflect this tree.
		When user toggles captions from from game to game, then album-collection-map-round is preserved.


	Execution steps are: 
		Load
			phase 1
			document-header-time-startup
						scripts inserted into index.htm are executed
						they prepare
								main methods,
								game definition hierachy,
								event handlers,
								call google analytics
							
			phase 2 -
			window.onload-time-startup
						executes on window.onload event,
							gio.session.init.entry();
								finalizes base definitions: gdef.procs.spawn_base_game_and_dress();
								other tasks: game def. load, albums load, ...
								...
								picks up default game or and loads its default collection from data sources,
								if all collections are failed, default map is displayed
								ggi.control_events();
								ggi.step_events();

		Play
			phase 3
			execution - user plays, creates maps, runs solver
			user-time-initializations
						user selects different collection or game and its data loads
						user creates maps


		Map's script validated in two places.
			First, in play/def/map_format modules - syntax validation.
			Second, in normalize_map() function - logical validation.
			Maps state is kept in map.load. States are:
				map.load	= 'parsed' - passed syntax validation
							= 'invalid'
							= 'finalized' - passed both validations and supplied
											borad, rounds, and all necessary properties for run-time. 

		If even single map in collection is failed validation, then all collection is invalid.
		Valid collection has property collection.maps_loaded ='success'.


<a href="../diary/">Diary:</a>
	is a collection of step by step versions.
	They are stand-alone snapshots of application at specific time.

	1. It is good to have backup versions when current version is
	   overengineered and one can fork from earlier ...
	2. Diary is a storage of abandoned ideas. Not every good idea can find its way to a final.

	For example, version 49 does not use css and images for dynamic "beautified" select box
	control. Can be a base for future browsers, with good CSS3 support.

	For example, in version 34, /var/www/bgame/gio/diary/34/games/sokoban/config.js
	has clear layout for tiles_map. This is a basic internal format for map
	which is used at least till verions 53, but it is not documented and abandoned later.


Y o u   a r e   w e l c o m e
</pre>
</div>

</body></html>

