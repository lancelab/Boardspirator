<!DOCTYPE html>

 <html><head>
  <!-- doctype for html 4 is only to satisfy IE -->
  
  <meta name="copyright" content="2011-2012 (c) Konstantin Kirillov">
  <meta name="description" content="Board Puzzle Framework"> 
  <meta name="keywords" content="board game, puzzle game, on line game, game development, educational game, sokoban"> 

  <title>Guest Readme</title>

	<link rel="stylesheet" href="css/readme.css">

	<script type="text/javascript" src="../tp/lib/jquery-1.7.js"></script>
	<script type="text/javascript" src="../tp/bind_events.js"></script>
	<script type="text/javascript" src="../tp/core.js"></script>
	<script type="text/javascript" src="../tp/core_no_jquery.js"></script>
	<script type="text/javascript" src="../tp/core2_no_jquery.js"></script>
	<script type="text/javascript" >$.fn.tp$.core.reset_path_from_land_to_app_root('..');</script>
	<script type="text/javascript" src="../tp/gui.js"></script>
	<script type="text/javascript" src="../tp/gui_no_jq.js"></script>
	<script type="text/javascript" src="../tp/form.js"></script>

	<!-- :: must be before others in gio: -->
	<script type="text/javascript" src="../core/config/core.js"></script>
	<script type="text/javascript" src="../core/config/gui.js"></script>
	<script type="text/javascript" src="../core/config/description.js"></script>
	<script type="text/javascript" src="../core/config/spawner.js"></script>


	<script type="text/javascript" src="../core/entry.js"></script>
	<script type="text/javascript" src="js/macrify.js"></script>

</head><body><div style="color:#666666; white-space:pre; font-family:monospace;">

Readme won't display if no JavaScript language enabled in your browser.
To display a readme, turn JavaScript on.

</div>

<div style="white-space:pre; font-family:monospace; visibility:hidden;">

<span style="visibility:hidden;">This token, #@title@#   , is a necessary flag to unhide this page.</span>

<pre>

<h1>Guest Readme</h1>

<h2>Introduction</h2>

	#@title@# is a Web-browser-based program to play, craft, and solve puzzles derived from root game, Whirly.

	#@title@# acts like a player which loads collection-file and skin and converts them into games ready to play.
	Collection-file contains game maps. Skin contain images.

	Core-collections and core-skins are bundled with the player.
	Other collections and skins can be read directly from Internet.

	As in case of Sokoban, when people created probably hundreds of collections, you can craft your
	own collections. 

	Collection-files can script not only maps, but also new games, albums, and skins.

<h2>Extra Links</h2>

	<span style="font-size:18px"><a href="whirly_and_sokoban.htm">Whirly and Sokoban Variants</a></span>
	<span style="font-size:18px"><a href="../?akey=kids6&asingle&curl=//def/albums/kids/6.json.txt">Kids 6</a></span>
	<span style="font-size:18px"><a href="../?akey=kids6co_colo&asingle&curl=//def/albums/kids/6co_colorban.json.txt">Kids 6 CoColo</a></span>
	<span style="font-size:18px"><a href="../?akey=kids7&asingle&curl=//def/albums/kids/7.json.txt">Kids 7</a></span>


<h2>Games, Albums, and Collections</h2>

	Game is a set of rules to play. "Game" here means a puzzle-game.

	Album contains three things: game, dress, and collections.

		Dress is how game looks and is interpreted in words.
		Dress includes images which are called "Skin".
		Collection is a file containing maps.

	Traditionally dresses and collections can be copyrighted.

	More accurately, game is a mathematical definition. It contains breeds, rules, and ovbjective.
	It cannot be copyrighted, but credited.

	Games can be derived from core-games or from external-games with core-game <a href="whirly.htm">Whirly</a>
	at the top of inheritance tree.




<a name="urlquery"></a>

	U R L - q u e r y    P a r a m e t e r s   . .

		.. control execution of the player. For example:

			...&akey=sokoban                                            - album key
			...&aurl=http://mysite.com/mypath/myalbum.txt               - albums url, maps in target file are ignored
			...&curl=http://users.bentonrea.com/~sasquatch/sokoban/m1   - collection url, target intends to have maps
			...&curl=//mycollection_path/mycollection.txt
			...&collection_ix=123
			...&map_ix=345
			...&asingle                                                 - suppresses display of other's albums except of &aurl
			...&slim=300000                                             - positions' number limit for solver


		&aurl or &curl can be set independently: both or one of them. 
		Game Crafters may want use these parameters to point to own sites.


<h2>Map Craft .. </h2>

		.. is a simplest way to craft a Game. It does not require creating new rules or dresses.
		Just borrow already existing Games or dresses and refer your maps to them.
		<a href="whirly.htm#deriving">This link</a> contains examples of both mapifying and derivation. Just ignore
		derivation part of collection files.


		&aurl and &curl can be full or relative urls:

			full url:
				&aurl=http://mysite.com/mypath/myalbum.txt
				&curl = http://users.bentonrea.com/~sasquatch/sokoban/m1">Sokoban map 123 from external collection
			relative url:
				relative url is attached to a "parent" by using prefix "//":
				&curl = //mycollection_path/mycollection.txt
					if albums is also supplied in form
							&aurl=http://mysite.com/mypath/myalbum.txt
						then resulting curl will be
							curl = http://mysite.com/mypath/mycollection_path/mycollection.txt
					otherwise, result is an appending to player's url:
							curl = #@AppRoot@#/mycollection_path/mycollection.txt

		If "//" used in maps, then relative url is attached to collection's root.

		You need to use <a href="map_formats.htm">collection file format</a>.
		To get started, look at existing collections in <a href="project_files.htm">def/albums</a>
		and the source of page <a href="whirly_and_sokoban.htm">Whirly and Sokoban Variants</a>.
		Ignore derivation parts at first step.


		Examples:
			<a href="../?akey=co_pullpush&curl=http://www.ne.jp/asahi/ai/yoshio/sokoban/handmade/soko001.txt">loading reverse Sokoban from external site</a>,
			<a href="../?akey=sokoban&map_ix=123&curl=http://users.bentonrea.com/~sasquatch/sokoban/m1">Sokoban map 123 from external collection</a>



<a name="craft"></a>


<h2>Game Craft</h2>

	<a href="whirly.htm#deriving">Deriving from Whirly.</a>





<a name="solver"> </a>

<h2>Solver</h2>

	.. is breadth-first and weak. Its power depends on size of your computer memory.
	Solver memory limit is preset to slim=(300000 pstates) for PC with 1 Gig memory.
	If your computer has less, solver may freeze your browser. If you computer has more,
	on your own risk, you may increase the limit to solve harder puzzles.

	For FireFox 11, Ubuntu, empirical values are:
		slim=300000 for 1 Gig,
		slim=1200000 for 3 Gig. (6000000 for string canons, Ubuntu 10.04, FF 11)
	
	Examples of supplying slim in URL string:
		Do land to player URL, select game of your choice, and then run solver like this:
			#@AppRoot@#/?slim=1000000
		or
			#@AppRoot@#/?akey=mozaic&slim=100000&map_ix=1


	Specifics:
		Solver starts from given position, not from initial position of the map.
		To generate new game-scenario, run solver for co-game, find "longest" solution in terms of
		interactions or moves, then co-vert the scenario.
		Don't switch to map other than currently under solving, because when solver finds
		slolution, it throws it into current GUI.

	There are possible difficulties at the edge of Web-browser capabilities:
		Browsers die, quit, crash differently on different OSes.
		For example: Around version 1.163. In Windows 7, in FF 16, solver halts on 2046 Megs of mem.  32 bit limit?
		So, far the best combination we found is FF 11, on Ubuntu 10.04 on 
		Acer laptop Aspire 5532.

		FF memory limits:	http://www.talesofinterest.net/top-10-awesome-firefox-tricks/
							http://superuser.com/questions/459448/how-can-i-configure-firefox-to-assume-i-have-less-memory



<a name="credits"> </a>
<h2>Giving Credits</h2>

		To give credits to your self or others, object-literal "credits" in collection and dress can be used.
		Credits also stream from query-string, from map-script, dress-script, wroll-header.credits.
		Credits can include dependence credits, like jQuery credits are nested in #@title@# description.
		Keywords which are interpreted as credits are here: <a href="../tp/core2_no_jquery.js">/.\	AVAILABLE CREDIT KEYS</a>


<h2>Troubleshooting</h2>

	Game crafter should not need debugging.
	If you feel this helps to publish the game, add URL-query parameter:

		...&debug 		- enables debugging
		...&debug=3		- traces path representation, parsing, and replays
		...&debug=5		- traces interaction
		...&debug=7		- album derivation

	Multiplication, enables both: ...&debug=15
	Heavy debug may take too much browser resources.


<h2><a href="app_developer_readme.htm">Application Developer Readme</a></h2>
<h2><a href="project_files.htm">Project Files</a></h2>

	

</pre></div></body></html>


