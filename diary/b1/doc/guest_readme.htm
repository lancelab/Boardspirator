<!DOCTYPE html>

<html>
	<head>

		<meta http-equiv="Content-Type"	content="text/html; charset=UTF-8">
		<meta name="copyright" content="2011-2012 (c) Konstantin Kirillov">
		<meta name="description" content="Board Puzzle Framework"> 
		<meta name="keywords" content="board game, puzzle game, on line game, game development, educational game, sokoban"> 

		<title>Guest Readme</title>

		<link rel="stylesheet" href="css/readme.css">

		<script type="text/javascript" >window.tp$ = window.tp$ || {}; window.tp$.reset_path_from_land_to_app_root = '..' ;</script>
		<script type="text/javascript" src="../prod/app.js""></script>
		<script type="text/javascript" src="js/macrify.js"></script>

	</head><body><div style="color:#666666; white-space:pre; font-family:monospace;">

		Readme won't display if no JavaScript language enabled in your browser.
		To display readme, turn JavaScript on.

	</div>

	<div style="white-space:pre; font-family:monospace; visibility:hidden;">

		<span style="visibility:hidden;">This token, #@title@#   , is a necessary flag to unhide this page.</span>

		<pre>

	<h1>Guest Readme. Draft.</h1>

		<a class="list" href="#pre_introduction">Pre Introduction</a>
		<a class="list" href="#introduction">Introduction</a>
		<a class="list" href="#loading_games">Loading Games</a>
		<a class="list" href="#components">Games, Albums, and Collections</a>
		<a class="list" href="#map_craft">Map Craft</a>
		<a class="list" href="map_formats.htm">Collection file format</a>.
		<a class="list" href="whirly.htm#deriving">Game Craft</a>
		<a class="list" href="#solver">Solver</a>
		<a class="list" href="#credits">Giving Credits</a>
		<a class="list" href="#troubleshooting">Troubleshooting</a>
		<a class="list" href="whirly.htm">Whirly</a>
		<a class="list" href="creativity_indices.htm">Map Creativity Index</a>
		<a class="list" href="whirly_and_sokoban.htm">Whirly and Sokoban Variants</a>
		<a class="list" href="../?akey=kids6&asingle&curl=//def/albums/kids/6.json.txt">Kids 6</a>
		<a class="list" href="../?akey=kids6co_colo&asingle&curl=//def/albums/kids/6co_colorban.json.txt">Kids 6 CoColo</a>
		<a class="list" href="../?akey=kids7&asingle&curl=//def/albums/kids/7.json.txt">Kids 7</a>
		<a class="list" href="app_developer_readme.htm">Application Developer Readme</a>
		<a class="list" href="project_files.htm">Project Files</a>
	<a id="introduction"> </a>

	<h2 id="pre_introduction" >Pre Introduction</h2>

	<span style="font-size:15px" >
	... bad things happen ... #@title@# began work nicely far before QA-tests began ...
	and developers where not able to resist playing it ... so they released #@title@# for 
	their own sake and for your, user's, risk ... (QA is Quality Assurance.) 
	... and they are still playing ... so it is unlikely QA will be completed at all ...

	If you are not comfortable with this, just leave the site ... Otherwise, continue playing and
	report bugs if encountered ...
	</span>


	<h2>Introduction</h2>


	#@title@# is a Web-browser player to play, craft, and solve puzzles derived from root game, <a href="whirly.htm">Whirly</a>.

	#@title@# loads gamion and converts it into a game ready to play.
	Gamion is a file which contains definitions of games, albums, and collection of maps.

	In "Sokoban World", gamions are simply collections of maps. Sokoban maps do not have script which
	allows to change game rules, for example. So, we occsionally will use word  "collection" in place of "gamion". 

	Core-gamions are bundled with the player. Other gamions can be loaded from Internet.

	As in case of Sokoban, when people created probably hundreds of collections, you can craft your own gamions. 




	<h2 id="components">Games, Albums, Collections, and Dresses.</h2>

	Game is a set of rules to play. "Game" here means a puzzle-game. In context of #@title@#,
	Game is a mathematical definition. It contains breeds, rules, and ovbjective.
	It cannot be copyrighted, but credited.


	Album merges together all components of playgame.
	Album merges four things: game, dress, collection-references, and listing.

		Dress is how game looks and is interpreted in words.
		Dress includes images which are called "Skin".
		Listing specifies how to group albums in front-page-listing.
		Collection is a file containing maps.

	After merging, album looks like a selection box on front-page. Game name often attached to album name.

	Traditionally dresses and maps can be copyrighted.

	Games can be derived from core-games or from external-games which are already derived from core-games.

	"Collection-references" can be references to gamions ( ... so "album-gamion" is a recursive structure ).
	This makes possible redressing and changing game-context for existing games and gamions.
	For example, one can land to Sokoban maps in Flocks context and apply Flock-rules to Sokoban maps.




	<a id="loading_games"> </a>
	<h2>Loading Games</h2>


	U R L - q u e r y    P a r a m e t e r s   control execution of the player. For example:

			...&akey=sokoban                                            - album key
			...&aurl=http://mysite.com/mypath/myalbum.txt               - albums url, maps in target file are ignored
			...&curl=http://users.bentonrea.com/~sasquatch/sokoban/m1   - collection url, target intends to have maps
			...&curl=//mycollection_path/mycollection.txt
			...&cix=123                                                 - gamion index. collection index. 
			( ...&collection_ix=123                                       - gamion index. depricated. )
			...&ckey=yes_this_is_collection_key                         - gamion key
			...&mix=345                                                 - map index
			( ...&map_ix=345                                            - map index. depricated )
			...&mkey=yes_this_is_maps_key
			...&dkey=yes_this_is_dress_key
			...&asingle                                                 - suppresses display of other's albums except of &aurl
			...&slim=300000                                             - positions' number limit for solver


		&aurl or &curl can be set independently: both or one of them. 
		Game Crafters may want use these parameters to point to own sites.



	<a id="map_craft"> </a>
	<h2>Map Craft .. </h2>

		.. is a simplest way to craft a Game. It does not require creating new rules or dresses.
		Just borrow already existing Games or dresses and apply them to your maps to them.
		<a href="whirly.htm#deriving">This link</a> contains examples of both mapifying and derivation.
		To get started, ignore derivation part of these gamions.


		&aurl and &curl can be full or relative urls:

			full url:
				&aurl=http://mysite.com/mypath/myalbum.txt
				&curl = http://users.bentonrea.com/~sasquatch/sokoban/m1 Sokoban map 123 from external collection
			relative url:
				relative url is attached to a "parent" by using prefix "//":
				&curl = //mycollection_path/mycollection.txt
					if albums is also supplied in form
							&aurl=http://mysite.com/mypath/myalbum.txt
						then resulting curl will become:
							curl = http://mysite.com/mypath/mycollection_path/mycollection.txt
					otherwise, result is an appending to player's url:
							curl = #@AppRoot@#/mycollection_path/mycollection.txt

		If "//" used in maps, then relative url is attached to collection's root.

		You need to use <a href="map_formats.htm">collection file format</a>.
		To get started, look at existing collections in <a href="project_files.htm">def/albums</a>
		or at links in page <a href="whirly_and_sokoban.htm">Whirly and Sokoban Variants</a>.
		Ignore derivation parts at first step.


		Examples:
			<a href="../?akey=co_pullpush&curl=http://www.ne.jp/asahi/ai/yoshio/sokoban/handmade/soko001.txt">loading reverse Sokoban from external site</a>,
			<a href="../?akey=sokoban&map_ix=123&curl=http://users.bentonrea.com/~sasquatch/sokoban/m1">Sokoban map 123 from external collection</a>


		<a href="url_query_samples.htm">More query samples.</a>


	<a id="solver"> </a>
	<h2>Solver ..</h2>

	.. is breadth-first and weak. Its power depends on size of your computer memory.
	Solver memory limit is preset to slim=(300000 positions) for PC with 1 Gig memory.
	If your computer has less, solver may freeze your browser. If you computer has more,
	on your own risk, you may increase the limit to solve harder puzzles.

	For FireFox 11, Ubuntu, empirical values are:
		slim=300000 for 1 Gig,
		slim=1200000 for 3 Gig. (6000000 for string canons, Ubuntu 10.04, FF 11)
	
	Examples of supplying slim in URL string:
		Do land to player URL, select game of your choice, and then run solver like this:
			#@AppRoot@#/?slim=1000000
		or
			#@AppRoot@#/?akey=mozaic&slim=100000&map_ix=1


	Specifics:
		Solver starts from given position, not from initial position of the map.
		To generate new game-scenario, run solver for co-game, find "longest" solution in terms of
		interactions or moves, then co-vert the scenario.
		Don't switch to map other than currently under solving, because when solver finds
		slolution, it throws it into currently displayed map.

	There are possible difficulties at the edge of Web-browser capabilities:
		Browsers die, quit, crash differently on different OSes.
		For example: Around version 1.163. In Windows 7, in FF 16, solver halts on 2046 Megs of mem.  32 bit limit?
		So, far the best combination we found is FF 11, on Ubuntu 10.04 on 
		Acer laptop Aspire 5532.

		FF memory limits:	http://www.talesofinterest.net/top-10-awesome-firefox-tricks/
							http://superuser.com/questions/459448/how-can-i-configure-firefox-to-assume-i-have-less-memory


	Behaviour: when solver is running, you should be able to play other games, but if you on
	the same map as solver, it will inject mercilessly solution right in round
	you currently playing.

	<a id="credits"> </a>
	<h2>Giving Credits</h2>


		Games, Dresses, Collections, and Maps can have credits to others or yourself.
		Albums do not support credits.

		Collections and Games absorb credits from 
			json-literal fields like credits.XXXXX

		Additionally, Collection absorb credits from
			jwon-header.credits, and
			from query-string.

		Maps and Dresses absorb credits from map-script and dress-script.
			
		Following credit keywords <a href="../tp/core2_no_jquery.js">/.\	AVAILABLE CREDIT KEYS</a>
		are supported.

		Core-bundled Skins have <a href="credits.htm">separate page</a> for credits. Other Skins may be credited in Dress credit fields.

		Credits support dependence credits, like jQuery credits are nested in #@title@# description.

		As a general rule, original credits override wrapper. For example, if "original" collection-A is referred
		from maps of collection-B, then A-credits will be on top of display which will contain B-credits in subcredits fields.
	



	<a id="troubleshooting"> </a>
	<h2>Troubleshooting</h2>

	Game crafter should not need debugging.
	If you feel this helps to publish the game, add URL-query parameter:

		...&debug 		- enables debugging
		...&debug=3		- traces path representation, parsing, and replays
		...&debug=5		- traces interaction
		...&debug=7		- album derivation

	Multiplication, enables both: ...&debug=15
	Heavy debug may take too much browser resources.




	</pre></div>

	<script	type="text/javascript">
		jQuery.fn.tp$.gio.config.google_apps.insert_ad_div_with_script();
	</script>


</body></html>


