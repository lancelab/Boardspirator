/:
{ "credits" :
	{
		/,	title                 	Beginner. Co-PullSwapPush.
		/,	author                	Konstantin Kirillov
		/,	version               	1.1
		/,	copyright             	Copyright (c) 2012 Konstantin Kirillov
		/,	license               	This collection is free for distribution, modification, and use provided these credits are not removed.
		/.	creation_date         	2012 - December 7, 2012

	}
}
/\\


:::map
# # # # # # # # #
# # - - - - - # #
# - B b D d E - #
# # - - 8 - - # #
# # # # # # # # #
:::board_end
:::dress=default
:::chosen


:::playpath=AUTO
|d.0.R|d.0.d|d.0.l|d.0.U|d.0.L|b.0.L|b.0.d|b.0.R|b.0.U|d.0.u|b.0.r|b.0.d|b.0.L|b.0.u|b.0.r
|b.0.r|d.0.d|d.0.D|b.0.L|b.0.l|b.0.l|b.0.D|b.0.l|b.0.l|d.0.l|d.0.l|d.0.l|d.0.D|d.0.R|d.0.u
|d.0.l|d.0.l|d.0.d|d.0.l|b.0.u|b.0.R|b.0.D|d.0.R|d.0.R|d.0.R|d.0.R

:::co-playpath
|d.0.R|d.0.R|d.0.R|d.0.L|b.0.D|b.0.L|b.0.d|d.0.r|d.0.u|d.0.r|d.0.r
|d.0.d|d.0.L|d.0.D|d.0.r|d.0.r|d.0.r|b.0.r|b.0.r|b.0.U|b.0.r|b.0.r|b.0.R|d.0.D|d.0.u|b.0.l
|b.0.l|b.0.d|b.0.R|b.0.u|b.0.l|d.0.d|b.0.D|b.0.L|b.0.u|b.0.L|d.0.L|d.0.D|d.0.r|d.0.u|d.0.L



:::map
# # # # # # # # # #
# # - - - - - - # #
# - A b B D d E - #
# # - - 8 - - - # #
# # # # # # # # # #
:::board_end
:::title=no_memory
:::dress=default
:::chosen


:::map
# # # # # # #
# - A b B - #
# - C d D - #
# E - 8 - E #
# # # # # # #
:::title=no_memory
:::board_end

:::dress=default
:::chosen

:::map=test
# # # # # # #
# D - - - D #
# - A b B - #
# - C d D - #
# D - 8 - D #
# # # # # # #
:::board_end

:::dress=default
:::chosen




:::map=test
# # # # # # #
# # - - - # #
# - - B - - #
# - A b B - #
# - C c D - W
# - - C - - #
# # - 8 - #
# # # # # # #
:::board_end
:::title=Bubble
:::dress=default
:::chosen

:::map=test
- # # # # # # #
- # - - # 8 - - #
# - - - - - - - #
# b # - # # # #
# C A - - #  
# B C - - #
# # # # # #
:::board_end


:::map=test
- # # # # #
- # - b 8 - #
# - - - - - #
# - # - # #
# C A - - #  
# B C B - #
# # # # # #
:::board_end
:::title=good?


:::map=test
- # # # # #
# # 8 - - #
# - b - - #
# - C - #
# - A - - #  
# C B C - #
# # # # # #
:::board_end

:::map=test
- # # # # #
# # 8 - - #
# - b - - #
# - # - #
# - A - - #  
# C B C - #
# # # # # #
:::board_end

:::playpath=2
rddDLuLDDDldRddRdrrULdRuluuLulldRddDrRuu
uLulldRdDRDluRdrruLuuLulldRDDdrruuuLulld
LDddrruLruUUllUrRdrruuuLLDDuuRurDddLdllu
luUrrdDruLdDldRDdrruuLUlldLdd

:::co-playpath=2
uuRurrDLddlluURurDuRdlDullDdr
drruLuuUldLddDDRRdddlluRlUrrUUdlLdlluuUR
urrdLdddlluUURurrdLddLdlluLdrURUuRurrdLd
ddLlUuuRurrdLddrdLuLDlluRuuRurDDDRdLUuul


:::playpath=1
rddDLuLDDDldRddRdrrULdRuluuLulldRddDrRuu
uLulldRdDRDluRdrruLuuLulldRDDdrruuuLulld
LDddrruLruUUllUrRdrruuuulDLDDuuRrddLdllu
RuUrrddLdllulUurUrddDDlDRdDrruuuL

:::co-playpath=1
RdddllUuRUrDDuulDldDrdrruLuullDdR
drruLuulLddDDRUrddddlluRlUrrUUdlLdlluuUR
urrdLdddlluUURurrdLddLdlluLdrURUuRurrdLd
ddLlUuuRurrdLddrdLuLDlluRuuRurDDDRdLUuul



:::map=test
# # # # # #
# - 8 - - #
# - b - - #
# - # - #
# - A - - #  
# C B C - #
# # # # # #
:::board_end
:::title=Tetrisoid

:::playpath=M
rddDLuLDDDldRurrdddRdlUuuulldddDrRuuuull
ddDRDluRdrruLuuulldDDdrruuuLulldLDddrruu
UdlluuUurrdLlDddrruLrUllUrRdrruuUlLur

:::co-playpath=
ldRrDddlluRlUrrUlLdlluuUrRulldDddrruU
ddlluuURurrdLdddlluUUurrdddLdlluLdrURUuu
rrddddLlUuuurrdddDruLuuulldRurDDDRdLUuul

:::map=test
- - # # #
- - # - #
# # # - #
# - - - #
# C B b #
# C A B #  
# 8 C C #
# # # # #
:::board_end
:::title=X


:::playpath
DllDDRDluRUlUUruLdrRDDrRUUULlDDdRruuUlLD
dDrruUuLLdDdrrUuULlDddrRuUUUdlLd

inverse_path=
uRruUDDdLluuUrRDdDlluUuRRdDdllUu
URrDddlLuUUrRUUULlUURluRdlDDrULdrURUUrrD


:::map=test
- - - # # # #
# # # - - 8 #
# - - - # - #
# C B b - - #
# C A B - #  
# - C C - #
# # # # # #
:::board_end
:::title=X


:::map=test
# # # # # #
# B 8 - B #
# C C C b #
# C A C - #  
# C C C B #
# # # # # #
:::board_end
:::title=cannot reach the end





:::map=test
# # # # # #
# B - - # #
# 8 A C - #
# - C A - #  
# b - - B #
# # # # # #
:::board_end
:::title=A

:::playpath=short
uRURrdLdllURUlURuLLdLUlULuRDlDruLuuRDDlu
uRDdRdrruruLLULDRUlDRDLDDrruLdlluULddrUU
lddRURDR

inverse_path=
LURDLuur
DDluuRDdrruLdllDURDLUrDLDRDLLdldlluRuULd
drUURddRdlUrURdRUrULuLLdLUrDRDrruLulLULd


:::playpath=long
uRURrdLdllURUlURuLLdLUlULuRDlDruLuuRDDlu
uRDdRdrruruLLULDRUlDRDLDDrruLdlluULddrUU
lddRURDRrrDldlLU

inverse_path=
DRrurDllLURDLuur
DDluuRDdrruLdllDURDLUrDLDRDLLdldlluRuULd
drUURddRdlUrURdRUrULuLLdLUrDRDrruLulLULd



:::map=test
# # # # # #
# # - - B #
# 8 A C - #
# - C A - #  
# b - - # #
# # # # # #
:::board_end
:::title=A


:::playpath=
uRRUulDrDdllUurRuRDrUUlUlDruLuRDRuRUrDLu
rrdLlLddrrUULuRDlDRddlld

inverse_path=
urruuLDrURdRUUlluuRrRull
dRDlDLdRURdRdlUrUrUUlURdLldDrruUlDrdDRLd

:::map=test
# # # # # #
# 8 - - - #
# - # C - #
# - A B - #  
# - - - b #
# # # # # #
:::board_end
:::title=A

:::playpath
uuLDrDdlLrUruulDlldDuurrRddllluurRrddlll
uuRrrddlUluRuUrrr

inverse_path=
lllDdLdrDruullLdd
rrruulLlddrrruuLllddUurrUrddlDlRruUlURdd


:::map=test
# # # # # # #
# - A C A - #
# - 1b 3B 1B - #
# - 2 - 2 - #  
# - - - - - #
# # # # # # #
:::board_end
:::title=Warm Up

:::dress
:::title=Crispy
:::skin=pullpush
:::image=b=sunny_rabbit.png
:::rules="Rabbit swaps carrots, pushes green, pulls blue."


:::playpath
UUruLLdllluuuRDlddrrruuLrddllluuUrRDUldd
rUlddrrrruulLrDrdddlllURuUlluurDRurrdddL
luuurrddDlluuurrdD


:::map
# # # # # # #
# - C C C - #
# - 3b 3B 3B - #
# - 2 - 2 X #  
# - - - - - #
# # # # # # #
:::board_end
:::title=Gold does not count


:::dress
:::title=Crispy
:::image=b=sunny_rabbit.png


:::playpath=Autosolved
UUruLdrUlLdllluuuRdrUUluuurrDuRRdrruLrDL
LrDrdDldlULUllluuurDuRdrRurrdLLDLdDrddll
dlluRRlluurDRddrruuU


:::map
- # # # # # -
# # - C - # #
# c - 2B - - #
# # 3 - 2 - #  
- # # 3B C - #
- - # # b # #
- - - # # # -
:::board_end
:::title=Dinner for Two - Dinner Crew


:::playpath=From L
|c.0.r
|c.0.d|c.0.r|c.0.r|c.0.u|c.0.L|c.0.d|c.0.l|c.0.l|c.0.D|c.0.l|c.0.u|c.0.R|c.0.d|c.0.D|c.0.l
|c.0.d|c.0.d|c.0.r|c.0.U|c.0.R|c.0.u|b.0.u|b.0.R|c.0.L|b.0.u|c.0.d|b.0.R|b.0.l|c.0.L|b.0.D
|b.0.R|b.0.U|c.0.r|b.0.U|b.0.U|c.0.L|c.0.u|b.0.u|c.0.L|c.0.r|c.0.R|c.0.u|c.0.r|c.0.R|c.0.R


:::playpath=Human Solved
|c.0.r|c.0.u|c.0.R|c.0.l|c.0.d|c.0.d|c.0.r|c.0.r|c.0.u|c.0.L|c.0.d|c.0.l|c.0.l|c.0.u|c.0.d
|c.0.D|c.0.D|c.0.l|c.0.d|c.0.d|c.0.r|c.0.r|c.0.r|c.0.d|c.0.L|c.0.r|b.0.u|b.0.u|b.0.l|b.0.l
|b.0.u|b.0.u|b.0.r|b.0.R|b.0.d|c.0.l|c.0.u|c.0.U|c.0.r|c.0.u|c.0.u|c.0.l|c.0.u|c.0.L|b.0.U
|b.0.r|c.0.l|c.0.D


:::map
- # # # # # #
# # C - - - #
# C 2 2B 2 - #
# - 3 B 2 - #  
# C 3B 3B 3 - #
# - - b C # #
# # # # # # -
:::board_end
:::title=Dinner for One


:::playpath
lUURlddrUrUdlluRdrruuullDDuu
rrdddlLdlULLruuullddDurrdLrddlULuullDDuu
rrdddlLdlluuRlddrruURlddrruUlluurrrdLuuu
llDuLrddlLddlluuRRuUUdlluRuRUUrrUUddRuLD





:::map
# # # # # # #
# # A - b # #
# - 3 1 3 C #
# - 2A B 2B A #  
# - 1 3 1 C #
# # C - - # #
# # # # # # #
:::board_end
:::title=Dish Fence

:::playpath
dDulllddrrULuLDrddl
UUrUUluurDDllluRdrruulDrdLDllddrrdrURRlu
urDRurrdDDrdDlddrUUlLdlUruulluRdrrDDrDDl
ddrUURRRdRRuLLdLUlURRurRUULuLuLLdDuuLDRU





:::map
# # # # # # #
# # - - - A #
# C 3 1 3B - #
# 8 2C X 2 8b #  
# A 1 3X 1B - #
# A - - C # #
# # # # # # #
:::board_end
:::title=Gold Counts

:::playpath=Generated
uLulldDrrddLLddrUluRlUUruuluurr
drddLruulDllDRlDrddlUUrUUrrdLulluurDldRl
DDrddlUULULruuLulldddDuurrdLrrddlUruLull
rrdddLu
lDrddllLLuulDRlDDRRlluurDldRddRULDuuRdLU



